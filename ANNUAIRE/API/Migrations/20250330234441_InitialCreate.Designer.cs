// <auto-generated />
using System;
using API;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace API.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250330234441_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.10");

            modelBuilder.Entity("ClassLibrary.Employee", b =>
                {
                    b.Property<int>("IdEmployee")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasAnnotation("Relational:JsonPropertyName", "idEmployee");

                    b.Property<DateTime>("Birthday")
                        .HasColumnType("TEXT")
                        .HasAnnotation("Relational:JsonPropertyName", "birthday");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasAnnotation("Relational:JsonPropertyName", "email");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT")
                        .HasAnnotation("Relational:JsonPropertyName", "firstName");

                    b.Property<int>("IdService")
                        .HasColumnType("INTEGER")
                        .HasAnnotation("Relational:JsonPropertyName", "idService");

                    b.Property<int>("IdSite")
                        .HasColumnType("INTEGER")
                        .HasAnnotation("Relational:JsonPropertyName", "idSite");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT")
                        .HasAnnotation("Relational:JsonPropertyName", "lastName");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasAnnotation("Relational:JsonPropertyName", "phoneNumber");

                    b.HasKey("IdEmployee");

                    b.HasIndex("IdService");

                    b.HasIndex("IdSite");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("ClassLibrary.Service", b =>
                {
                    b.Property<int>("IdService")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.HasKey("IdService");

                    b.ToTable("Services");

                    b.HasData(
                        new
                        {
                            IdService = 1,
                            Name = "Informatique"
                        },
                        new
                        {
                            IdService = 2,
                            Name = "Ressource humaine"
                        },
                        new
                        {
                            IdService = 3,
                            Name = "Comptabilité et Finance"
                        },
                        new
                        {
                            IdService = 4,
                            Name = "Production"
                        },
                        new
                        {
                            IdService = 5,
                            Name = "Vente et Marketing"
                        },
                        new
                        {
                            IdService = 6,
                            Name = "Direction et Administration Générale"
                        },
                        new
                        {
                            IdService = 7,
                            Name = "Communication"
                        });
                });

            modelBuilder.Entity("ClassLibrary.Site", b =>
                {
                    b.Property<int>("IdSite")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.HasKey("IdSite");

                    b.ToTable("Sites");

                    b.HasData(
                        new
                        {
                            IdSite = 1,
                            City = "Paris"
                        },
                        new
                        {
                            IdSite = 2,
                            City = "Marseille"
                        },
                        new
                        {
                            IdSite = 3,
                            City = "Lyon"
                        },
                        new
                        {
                            IdSite = 4,
                            City = "Toulouse"
                        },
                        new
                        {
                            IdSite = 5,
                            City = "Lille"
                        },
                        new
                        {
                            IdSite = 6,
                            City = "Bordeaux"
                        },
                        new
                        {
                            IdSite = 7,
                            City = "Strasbourg"
                        });
                });

            modelBuilder.Entity("ClassLibrary.Employee", b =>
                {
                    b.HasOne("ClassLibrary.Service", "Service")
                        .WithMany()
                        .HasForeignKey("IdService")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("ClassLibrary.Site", "Site")
                        .WithMany()
                        .HasForeignKey("IdSite")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Service");

                    b.Navigation("Site");
                });
#pragma warning restore 612, 618
        }
    }
}
